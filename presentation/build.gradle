apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.racobos.cabifyandroidchallenge"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file('../config/debug.jks')
            storePassword 'password'
            keyAlias 'debug'
            keyPassword 'password'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            resValue "string", "GOOGLE_API_KEY", '"AIzaSyBn23hn4eg15ajts1s98y_qvhok5Tebhik"'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}
repositories {
    // IcePick repository
    maven { url "https://clojars.org/repo/" }
}
dependencies {
    compile project(':default_android_dependencies')
    compile project(':domain')
    // Default
    compile 'com.android.support:appcompat-v7:24.2.1'
    // Dagger 2
    apt rootProject.ext.dependencies_sources.dagger_compiler
    compile rootProject.ext.dependencies_sources.dagger_library
    provided rootProject.ext.dependencies_sources.javax_annotation
    // composer MARA
    compile rootProject.ext.dependencies_sources.composer_mara_library
    apt rootProject.ext.dependencies_sources.composer_mara_compiler
    // Butterknife
    compile rootProject.ext.dependencies_sources.butterknife_library
    apt rootProject.ext.dependencies_sources.butterknife_compiler
    // google maps
    compile rootProject.ext.dependencies_sources.google_play_services
    // Karumi Dexter
    compile rootProject.ext.dependencies_sources.dexter_library
    // IcePick
    compile rootProject.ext.dependencies_sources.icepick_library
    provided rootProject.ext.dependencies_sources.icepick_processor
}
